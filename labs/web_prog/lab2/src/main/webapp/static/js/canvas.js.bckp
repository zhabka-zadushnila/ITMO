document.addEventListener('DOMContentLoaded', function() {
    const canvas = document.getElementById('main-canvas');
    const ctx = canvas.getContext('2d');
    const container = canvas.parentElement;

    function drawCanvas() {
        canvas.width = container.clientWidth;
        canvas.height = container.clientHeight;

        ctx.fillStyle = 'white';
        ctx.fillRect(0, 0, canvas.width, canvas.height);

        const centerX = canvas.width / 2;
        const centerY = canvas.height / 2;
        const gridStep = 50;
        const amount = 40
        const axisColor = '#333';
        const gridColor = '#ddd';
        const textColor = '#555';

        console.log(centerX/gridStep);
        ctx.fillStyle = gridColor;
        ctx.lineWidth = 1;
        for(var colX = centerX - gridStep*amount; colX < centerX + gridStep*amount; colX+=gridStep){
            //console.log(colX);
            ctx.beginPath();
            ctx.moveTo(colX, -1*gridStep);
            ctx.lineTo(colX, canvas.height + gridStep)
            ctx.stroke();
            ctx.closePath();
        }

        for(var colY = centerY - gridStep *amount; colY < centerY + gridStep * amount; colY+=gridStep){
            ctx.beginPath();
            ctx.moveTo(-1*gridStep, colY);
            ctx.lineTo(canvas.width + gridStep, colY)
            ctx.stroke();
            ctx.closePath();
        }

        //main axises

        ctx.fillStyle = axisColor;
        ctx.lineWidth = 3;
        ctx.beginPath();
        ctx.moveTo(centerX, canvas.height+ gridStep);
        ctx.lineTo(centerX, 0)
        ctx.stroke();
        ctx.moveTo(canvas.width +gridStep, centerY);
        ctx.lineTo(-1*gridStep, centerY)
        ctx.stroke();
        ctx.closePath();

        let r = 234;
        
        //figure
        for (let y = 0; y < canvas.height; y++) {
            for (let x = -centerX; x < centerX; x++) {
                if ((x * x) / (r * r) + (y * y) / ((r / 2) * (r / 2)) <= 1) {
                    if (
                      ((x - r / 2) * (x - r / 2)) / ((r / 8) * (r / 8)) +
                        ((y + r / 2) * (y + r / 2)) / ((r / 4) * (r / 4)) >
                      1
                    ) {
                      if (
                        ((x + r / 2) * (x + r / 2)) / ((r / 8) * (r / 8)) +
                          ((y + r / 2) * (y + r / 2)) / ((r / 4) * (r / 4)) >
                        1
                      ) {
                        if (
                          ((x - r / 4) * (x - r / 4)) / ((r / 8) * (r / 8)) +
                            ((y + (3 * r) / 5) * (y + (3 * r) / 5)) /
                              ((r / 4) * (r / 4)) >
                          1
                        ) {
                          if (
                            ((x + r / 4) * (x + r / 4)) / ((r / 8) * (r / 8)) +
                              ((y + (3 * r) / 5) * (y + (3 * r) / 5)) /
                                ((r / 4) * (r / 4)) >
                            1
                          ) {
                            if (
                              ((x - r / 3) * (x - r / 3)) / ((r / 8) * (r / 8)) +
                                ((y - r / 2) * (y - r / 2)) / ((r / 3) * (r / 3)) >
                              1
                            ) {
                              if (
                                ((x + r / 3) * (x + r / 3)) / ((r / 8) * (r / 8)) +
                                  ((y - r / 2) * (y - r / 2)) / ((r / 3) * (r / 3)) >
                                1
                              ) {
                                if (!((-1 * r) / 6 < x && x < r / 6 && y > r / 3)) {
                                    ctx.fillRect(x, y, 1, 1);
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
            }
        }
        
        ctx.putImageData(imageData, 0, 0);
        
    }

    drawCanvas();

    window.addEventListener('resize', drawCanvas);
});